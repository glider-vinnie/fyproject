{"ast":null,"code":"var _jsxFileName = \"/home/vinnie/project/fyproject/Timmy/frontend/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Message from './Message';\nimport ChatInput from './ChatInput';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatContainer = styled.div`\n  width: 400px;\n  height: 600px;\n  background: white;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\n  display: flex;\n  flex-direction: column;\n`;\n_c = ChatContainer;\nconst MessagesContainer = styled.div`\n  flex: 1;\n  overflow-y: auto;\n  padding: 20px;\n`;\n_c2 = MessagesContainer;\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const sendMessage = async text => {\n    // Add user message\n    setMessages(prev => [...prev, {\n      text,\n      sender: 'user'\n    }]);\n    try {\n      const response = await axios.post('http://localhost:5000/api/chat', {\n        message: text\n      });\n      const {\n        response: botResponse,\n        sentiment\n      } = response.data;\n\n      // Add bot message\n      setMessages(prev => [...prev, {\n        text: botResponse,\n        sender: 'bot',\n        sentiment: sentiment\n      }]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ChatContainer, {\n    children: [/*#__PURE__*/_jsxDEV(MessagesContainer, {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(Message, {\n        ...message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSend: sendMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c3 = Chat;\nexport default Chat;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ChatContainer\");\n$RefreshReg$(_c2, \"MessagesContainer\");\n$RefreshReg$(_c3, \"Chat\");","map":{"version":3,"names":["React","useState","styled","Message","ChatInput","axios","jsxDEV","_jsxDEV","ChatContainer","div","_c","MessagesContainer","_c2","Chat","_s","messages","setMessages","sendMessage","text","prev","sender","response","post","message","botResponse","sentiment","data","error","console","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","onSend","_c3","$RefreshReg$"],"sources":["/home/vinnie/project/fyproject/Timmy/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Message from './Message';\r\nimport ChatInput from './ChatInput';\r\nimport axios from 'axios';\r\n\r\nconst ChatContainer = styled.div`\r\n  width: 400px;\r\n  height: 600px;\r\n  background: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 10px rgba(0,0,0,0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst MessagesContainer = styled.div`\r\n  flex: 1;\r\n  overflow-y: auto;\r\n  padding: 20px;\r\n`;\r\n\r\nfunction Chat() {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const sendMessage = async (text) => {\r\n    // Add user message\r\n    setMessages(prev => [...prev, { text, sender: 'user' }]);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/chat', {\r\n        message: text\r\n      });\r\n\r\n      const { response: botResponse, sentiment } = response.data;\r\n\r\n      // Add bot message\r\n      setMessages(prev => [...prev, {\r\n        text: botResponse,\r\n        sender: 'bot',\r\n        sentiment: sentiment\r\n      }]);\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ChatContainer>\r\n      <MessagesContainer>\r\n        {messages.map((message, index) => (\r\n          <Message key={index} {...message} />\r\n        ))}\r\n      </MessagesContainer>\r\n      <ChatInput onSend={sendMessage} />\r\n    </ChatContainer>\r\n  );\r\n}\r\n\r\nexport default Chat; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGN,MAAM,CAACO,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,aAAa;AAUnB,MAAMG,iBAAiB,GAAGT,MAAM,CAACO,GAAG;AACpC;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAJID,iBAAiB;AAMvB,SAASE,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMgB,WAAW,GAAG,MAAOC,IAAI,IAAK;IAClC;IACAF,WAAW,CAACG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAED,IAAI;MAAEE,MAAM,EAAE;IAAO,CAAC,CAAC,CAAC;IAExD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,gCAAgC,EAAE;QAClEC,OAAO,EAAEL;MACX,CAAC,CAAC;MAEF,MAAM;QAAEG,QAAQ,EAAEG,WAAW;QAAEC;MAAU,CAAC,GAAGJ,QAAQ,CAACK,IAAI;;MAE1D;MACAV,WAAW,CAACG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC5BD,IAAI,EAAEM,WAAW;QACjBJ,MAAM,EAAE,KAAK;QACbK,SAAS,EAAEA;MACb,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEpB,OAAA,CAACC,aAAa;IAAAqB,QAAA,gBACZtB,OAAA,CAACI,iBAAiB;MAAAkB,QAAA,EACfd,QAAQ,CAACe,GAAG,CAAC,CAACP,OAAO,EAAEQ,KAAK,kBAC3BxB,OAAA,CAACJ,OAAO;QAAA,GAAiBoB;MAAO,GAAlBQ,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACe,CAAC,eACpB5B,OAAA,CAACH,SAAS;MAACgC,MAAM,EAAEnB;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEpB;AAACrB,EAAA,CAnCQD,IAAI;AAAAwB,GAAA,GAAJxB,IAAI;AAqCb,eAAeA,IAAI;AAAC,IAAAH,EAAA,EAAAE,GAAA,EAAAyB,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAA1B,GAAA;AAAA0B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}